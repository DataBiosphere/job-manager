swagger: '2.0'
info:
  title: Job Manager Service
  description: Job Manager API for interacting with asynchronous batch jobs and workflows.
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  version: '0.0.1'
produces:
  - application/json
paths:
  '/jobs/{id}/abort':
    post:
      operationId: AbortJob
      summary: Abort a job by ID
      parameters:
        - name: id
          description: Job ID
          required: true
          type: string
          in: path
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/JobTerminal'
        '500':
          $ref: '#/responses/ServerError'
      tags:
        - Jobs
  '/jobs/{id}/updateLabels':
    post:
      operationId: UpdateJobLabels
      summary: Update labels on a job.
      parameters:
        - name: id
          description: Job ID
          required: true
          type: string
          in: path
        - name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateJobLabelsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateJobLabelsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
        '501':
          description: Server does not implement this method.
      tags:
        - Jobs
  '/jobs/query':
    post:
      # TODO(calbach): Parameterize sort ordering.
      operationId: QueryJobs
      summary: |
        Query jobs by various filter criteria. Returned jobs are ordered from
        newest to oldest submission time.
      parameters:
        - name: body
          required: true
          in: body
          schema:
            $ref: '#/definitions/QueryJobsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QueryJobsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'
      tags:
        - Jobs
  '/jobs/{id}':
    get:
      operationId: GetJob
      summary: Query for job and task-level metadata for a specified job
      parameters:
        - name: id
          description: Job ID
          required: true
          type: string
          in: path
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JobMetadataResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
      tags:
        - Jobs
definitions:
  JobMetadataResponse:
    description: Job and task level metadata
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: The identifier of the job
      status:
        $ref: '#/definitions/JobStatus'
      submission:
        type: string
        format: date-time
        description: Submission datetime of the job in ISO8601 format
      name:
        type: string
        description: The name of the job
      start:
        type: string
        format: date-time
        description: Start datetime of the job in ISO8601 format
      end:
        type: string
        format: date-time
        description: End datetime of the job in ISO8601 format
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      labels:
        type: object
        description: Custom job labels with string values
      logs:
        type: object
        description: Map of type of log file to its location
      tasks:
        type: array
        items:
          $ref: '#/definitions/TaskMetadata'
      failures:
        type: array
        items:
          $ref: '#/definitions/FailureMessage'
  JobStatus:
    type: string
    enum:
      - Submitted
      - Running
      - Aborting
      - Failed
      - Succeeded
      - Aborted
  TaskMetadata:
    description: Task level metadata
    properties:
      inputs:
        type: object
        description: Mapping of input fully qualified names to stringified values
      # TODO: Define a generalized enum for this. For details, see
      # https://github.com/DataBiosphere/job-manager/pull/14.
      executionStatus:
        type: string
        description: Backend-specific task status.
      start:
        type: string
        format: date-time
        description: Start datetime of the task execution in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the task execution in ISO8601 format with milliseconds
      name:
        type: string
        description: The name of the job
      executionId:
        type: string
        description: Backend-specific job ID
      failures:
        type: array
        items:
          $ref: '#/definitions/FailureMessage'
      returnCode:
        type: integer
        description: Task execution return code
      stdout:
        type: string
        description: Path to the standard output file for this task
      stderr:
        type: string
        description: Path to the standard error file for this task
      attempts:
        type: integer
        description: Number of times the task was run
      jobId:
        type: string
        description: Id of the job corresponding to this task, if this task is a nested child job. Expresses a child:parent relationship between this job and the job containing this task.

  FailureMessage:
    description: Failure messages
    required:
      - failure
    properties:
      failure:
        type: string
        description: The failure message
      timestamp:
        type: string
        format: date-time
        description: The time at which this failure occurred
  UpdateJobLabelsRequest:
    description: Update labels on a job
    properties:
      labels:
        type: object
        description: |
          Labels to be merged into the existing job labels. Overwrites the label
          values for all given keys. Existing labels on the job which are not
          referenced in this request are left unmodified.
  UpdateJobLabelsResponse:
    description: Response to an update labels request
    properties:
      labels:
        type: object
        description: All job labels, after the update has been applied.
  QueryJobsRequest:
    description: Job query parameters
    properties:
      start:
        type: string
        format: date-time
        description: >
          Returns only jobs with an equal or later start datetime. If both start
          and end date are specified, start date must be before or equal to end
          date.
      end:
        type: string
        format: date-time
        description: >
          Returns only jobs with an equal or earlier end datetime. If both start
          and end date are specified, start date must be before or equal to end
          date.
      statuses:
        type: array
        items:
          $ref: '#/definitions/JobStatus'
        description: >
          If specified, returns only jobs matching any of these statuses.
      labels:
        type: object
        description: >
          If specified, returns only jobs containing labels with exact string
          matches to each of these labels.
      name:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9_-]*$
        description: >
          Returns only jobs with the specified name.
      pageSize:
        type: integer
        format: int32
        description: |
          The maximum number of results to return in a single page. If unspecified,
          a server default will be used. Note that the server may elect to
          return fewer results per page than requested.
      pageToken:
        type: string
        description: |
          The continuation token, which is used to page through large result
          sets. To get the next page of results, set this parameter to the value
          of `nextPageToken` from the previous response.
      parentId:
        type: string
        description: >
          Returns only jobs with the given parent ID. This parameter may be
          unsupported for some API implementations or required for others
          depending on whether there exists a logical noun above a job
          in the resource hierarchy (for example, a cloud project). If the
          presence of this parameter is incompatible with the server, it may
          return a 400 HTTP status.
  QueryJobsResponse:
    description: Response to a job query
    required:
      - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/QueryJobsResult'
      nextPageToken:
        type: string
        description: |
          The continuation token, which is used to page through large result
          sets. Provide this value in a subsequent request to return the next
          page of results. This field will be empty if there aren't any
          additional results.
  # TODO(calbach): Reconcile QueryJobsResult with JobMetadata.
  QueryJobsResult:
    description: Result for an individual job returned by a job query
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: Job ID
      name:
        type: string
        description: Job name
      status:
        $ref: '#/definitions/JobStatus'
      submission:
        type: string
        format: date-time
        description: Submission datetime in ISO8601 format
      start:
        type: string
        format: date-time
        description: Job start datetime in ISO8601 format
      end:
        type: string
        format: date-time
        description: Job end datetime in ISO8601 format
      labels:
        type: object
        description: Custom job labels with string values
      parentJobId:
        type: string
        description: Id of the parent job.. Expresses a child:parent relationship between this job and the job that called it.
responses:
  BadRequest:
    description: 'Bad request'
  ServerError:
    description: 'Internal server error'
  NotFound:
    description: 'Job not found'
  JobTerminal:
    description: 'Job already in terminal status'
  Unauthorized:
    description: 'Unauthorized'
securityDefinitions:
  google_id_token:
    type: oauth2
    description: Bearer token authorization
    name: Authorization
    in: header
    flow: implicit
    authorizationUrl: ""
    x-google-issuer: "https://accounts.google.com"
    x-google-jwks_uri: "https://www.googleapis.com/oauth2/v1/certs"
    scopes:
      https://www.googleapis.com/auth/genomics: Full access to google genomics and pipelines API
security:
  google_id_token: []
