# coding: utf-8

from __future__ import absolute_import
from jobs.models.aggregation import Aggregation
from jobs.models.status_counts import StatusCounts
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AggregationResponse(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, summary=None, aggregations=None):
        """
        AggregationResponse - a model defined in Swagger

        :param summary: The summary of this AggregationResponse.
        :type summary: StatusCounts
        :param aggregations: The aggregations of this AggregationResponse.
        :type aggregations: List[Aggregation]
        """
        self.swagger_types = {
            'summary': StatusCounts,
            'aggregations': List[Aggregation]
        }

        self.attribute_map = {
            'summary': 'summary',
            'aggregations': 'aggregations'
        }

        self._summary = summary
        self._aggregations = aggregations

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AggregationResponse of this AggregationResponse.
        :rtype: AggregationResponse
        """
        return deserialize_model(dikt, cls)

    @property
    def summary(self):
        """
        Gets the summary of this AggregationResponse.

        :return: The summary of this AggregationResponse.
        :rtype: StatusCounts
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """
        Sets the summary of this AggregationResponse.

        :param summary: The summary of this AggregationResponse.
        :type summary: StatusCounts
        """

        self._summary = summary

    @property
    def aggregations(self):
        """
        Gets the aggregations of this AggregationResponse.

        :return: The aggregations of this AggregationResponse.
        :rtype: List[Aggregation]
        """
        return self._aggregations

    @aggregations.setter
    def aggregations(self, aggregations):
        """
        Sets the aggregations of this AggregationResponse.

        :param aggregations: The aggregations of this AggregationResponse.
        :type aggregations: List[Aggregation]
        """

        self._aggregations = aggregations

