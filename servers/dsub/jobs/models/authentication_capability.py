# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AuthenticationCapability(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, is_required=None, scopes=None):
        """
        AuthenticationCapability - a model defined in Swagger

        :param is_required: The is_required of this AuthenticationCapability.
        :type is_required: bool
        :param scopes: The scopes of this AuthenticationCapability.
        :type scopes: List[str]
        """
        self.swagger_types = {
            'is_required': bool,
            'scopes': List[str]
        }

        self.attribute_map = {
            'is_required': 'is_required',
            'scopes': 'scopes'
        }

        self._is_required = is_required
        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthenticationCapability of this AuthenticationCapability.
        :rtype: AuthenticationCapability
        """
        return deserialize_model(dikt, cls)

    @property
    def is_required(self):
        """
        Gets the is_required of this AuthenticationCapability.
        Whether or not authentication is required

        :return: The is_required of this AuthenticationCapability.
        :rtype: bool
        """
        return self._is_required

    @is_required.setter
    def is_required(self, is_required):
        """
        Sets the is_required of this AuthenticationCapability.
        Whether or not authentication is required

        :param is_required: The is_required of this AuthenticationCapability.
        :type is_required: bool
        """

        self._is_required = is_required

    @property
    def scopes(self):
        """
        Gets the scopes of this AuthenticationCapability.
        OAuth 2.0 requested scopes

        :return: The scopes of this AuthenticationCapability.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """
        Sets the scopes of this AuthenticationCapability.
        OAuth 2.0 requested scopes

        :param scopes: The scopes of this AuthenticationCapability.
        :type scopes: List[str]
        """

        self._scopes = scopes

