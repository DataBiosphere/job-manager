# coding: utf-8

from __future__ import absolute_import
from jobs.models.status_counts import StatusCounts
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AggregationEntry(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, label=None, status_counts=None):
        """
        AggregationEntry - a model defined in Swagger

        :param label: The label of this AggregationEntry.
        :type label: str
        :param status_counts: The status_counts of this AggregationEntry.
        :type status_counts: StatusCounts
        """
        self.swagger_types = {
            'label': str,
            'status_counts': StatusCounts
        }

        self.attribute_map = {
            'label': 'label',
            'status_counts': 'statusCounts'
        }

        self._label = label
        self._status_counts = status_counts

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AggregationEntry of this AggregationEntry.
        :rtype: AggregationEntry
        """
        return deserialize_model(dikt, cls)

    @property
    def label(self):
        """
        Gets the label of this AggregationEntry.
        The label value for this aggregation entry.

        :return: The label of this AggregationEntry.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """
        Sets the label of this AggregationEntry.
        The label value for this aggregation entry.

        :param label: The label of this AggregationEntry.
        :type label: str
        """

        self._label = label

    @property
    def status_counts(self):
        """
        Gets the status_counts of this AggregationEntry.

        :return: The status_counts of this AggregationEntry.
        :rtype: StatusCounts
        """
        return self._status_counts

    @status_counts.setter
    def status_counts(self, status_counts):
        """
        Sets the status_counts of this AggregationEntry.

        :param status_counts: The status_counts of this AggregationEntry.
        :type status_counts: StatusCounts
        """

        self._status_counts = status_counts

