# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  ui:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - restore_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "ui/package.json" }}
      - run:
          name: nvm install node and UI dependencies
          command: |
            /opt/circleci/.nvm/nvm.sh install 8.5.0
            cd ui
            npm install
            npm install -g @angular/cli
      - save_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "ui/package.json" }}
          paths:
            - "ui/node_modules"
      - run:
          name: Lint angular code with ng lint
          command: |
            /opt/circleci/.nvm/nvm.sh use 8.5.0
            cd ui
            ng lint --type-check
      - run:
          name: Run UI unit tests
          command: |
            /opt/circleci/.nvm/nvm.sh use 8.5.0
            cd ui
            ng test --watch=false -sm=false
      - run:
          name: Ensure the UI builds for prod
          # Target production to emulate deployment, but a dev environment
          # because we do not have a prod environment file.
          # https://github.com/angular/angular-cli/wiki/build#--dev-vs---prod-builds
          command: |
            /opt/circleci/.nvm/nvm.sh use 8.5.0
            cd ui
            ng build --target=production --environment=dev

  backends:
    environment:
      - KEEP_TEST_DSUB_FILES: true
      - GOOGLE_APPLICATION_CREDENTIALS: /home/circleci/gcloud-service-key.json
    machine:
      image: circleci/classic:latest
    working_directory: ~/job-manager
    steps:
      - checkout
      - restore_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/dsub/requirements.txt" }}
      - restore_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/cromwell/requirements.txt" }}
      - restore_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/jm_utils/requirements.txt" }}
      - run:
          name: Install detox and yapf
          command: |
            pip install detox yapf
      - run:
          name: Lint python code with yapf
          command: |
            sh ./scripts/yapf_lint.sh
      - run:
          name: Run dsub server tests
          command: |
            if [ -z "$GCLOUD_SERVICE_KEY" || "${CIRCLE_BRANCH}" != "master" ]; then
              detox -n 8 -c ./servers/dsub -- \
                --exclude-test=jobs.test.test_jobs_controller_google.TestJobsControllerGoogle
            else
              echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > /home/circleci/gcloud-service-key.json
              detox -n 8 -c ./servers/dsub
              rm /home/circleci/gcloud-service-key.json
            fi
      - run:
          name: Run cromwell server tests
          command: |
            detox -c ./servers/cromwell
      - run:
          name: Run jm_utils server tests
          command: |
            detox -c ./servers/jm_utils
      - save_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/dsub/requirements.txt" }}
          paths:
            - "servers/dsub/.tox"
      - save_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/cromwell/requirements.txt" }}
          paths:
            - "servers/cromwell/.tox"
      - save_cache:
          key: node-modules-{{ .Branch }}--{{ checksum "servers/jm_utils/requirements.txt" }}
          paths:
            - "servers/jm_utils/.tox"
workflows:
  version: 2
  ui_and_backends:
    jobs:
      - ui
      - backends
